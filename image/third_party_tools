# -*- shell-script -*-
# Note: Change to _VERSION likely needs to be reported to the mirror2swift configuration

set +x

USE_SWIFT_CACHE=${USE_SWIFT_CACHE:-yes}
SWIFT_CACHE="http://46.231.132.68:8080/v1/AUTH_b50e80d3969f441a8b7b1fe831003e0a/repomirror"

# yum
RDO_REPO="https://repos.fedorapeople.org/repos/openstack/openstack-newton/rdo-release-newton-4.noarch.rpm"
URL_LIST="$URL_LIST $RDO_REPO"

# Serverspec gem versions
SERVERSPEC_VERSION=2.25.0

# Storyboard
STORYBOARD_WEBCLIENT_COMMIT="28b4809"

if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    STORYBOARD_WEBCLIENT_EXTRA_VARS="storyboard_webclient_url: \"${SWIFT_CACHE}/storyboard-webclient/storyboard-webclient-${STORYBOARD_WEBCLIENT_COMMIT}.tar.gz\""
    STORYBOARD_WEBCLIENT_EXTRA_VARS+=", storyboard_webclient_commit: \"${STORYBOARD_WEBCLIENT_COMMIT}\""
fi


# Elasticsearch
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    ELASTICSEARCH_EXTRA_VARS="elasticsearch_repo_url: \"http://46.231.132.68:8080/v1/AUTH_b50e80d3969f441a8b7b1fe831003e0a/repomirror/elasticsearch-2.x/\""
    ELASTICSEARCH_EXTRA_VARS+=", elasticsearch_repo_name: \"elastic\""
    ELASTICSEARCH_EXTRA_VARS+=", elasticsearch_repo_desc: \"Mirrored elastic repo\""
    ELASTICSEARCH_EXTRA_VARS+=", elasticsearch_repo_gpgcheck: \"1\""
    ELASTICSEARCH_EXTRA_VARS+=", elasticsearch_repo_gpgkey: \"\""
fi

# Logstash
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    LOGSTASH_EXTRA_VARS="logstash_repo_url: \"http://46.231.132.68:8080/v1/AUTH_b50e80d3969f441a8b7b1fe831003e0a/repomirror/logstash-2.2/\""
    LOGSTASH_EXTRA_VARS+=", logstash_repo_name: \"logstash\""
    LOGSTASH_EXTRA_VARS+=", logstash_repo_desc: \"Mirrored logstash repo\""
    LOGSTASH_EXTRA_VARS+=", logstash_repo_gpgcheck: \"1\""
    LOGSTASH_EXTRA_VARS+=", logstash_repo_gpgkey: \"\""
fi

# Kibana
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    KIBANA_EXTRA_VARS="kibana_repo_url: \"http://46.231.132.68:8080/v1/AUTH_b50e80d3969f441a8b7b1fe831003e0a/repomirror/kibana-4.5/\""
    KIBANA_EXTRA_VARS+=", kibana_repo_name: \"kibana\""
    KIBANA_EXTRA_VARS+=", kibana_repo_desc: \"Mirrored kibana repo\""
    KIBANA_EXTRA_VARS+=", kibana_repo_gpgcheck: \"1\""
    KIBANA_EXTRA_VARS+=", kibana_repo_gpgkey: \"\""
fi

# Grafana
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    GRAFANA_EXTRA_VARS="grafana_repo_url: \"http://46.231.132.68:8080/v1/AUTH_b50e80d3969f441a8b7b1fe831003e0a/repomirror/grafana/\""
    GRAFANA_EXTRA_VARS+=", grafana_repo_name: \"grafana\""
    GRAFANA_EXTRA_VARS+=", grafana_repo_desc: \"Mirrored elastic repo\""
    GRAFANA_EXTRA_VARS+=", grafana_repo_gpgcheck: \"1\""
    GRAFANA_EXTRA_VARS+=", grafana_repo_gpgkey: \"\""
fi

# jenkins
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    JENKINS_EXTRA_VARS="jenkins_cache_url: \"${SWIFT_CACHE}/jenkins_plugins\""
    JENKINS_EXTRA_VARS+=", jenkins_repo_url: \"http://46.231.132.68:8080/v1/AUTH_b50e80d3969f441a8b7b1fe831003e0a/repomirror/jenkins/\""
    JENKINS_EXTRA_VARS+=", jenkins_repo_name: \"jenkins\""
    JENKINS_EXTRA_VARS+=", jenkins_repo_desc: \"Mirrored jenkins repo\""
    JENKINS_EXTRA_VARS+=", jenkins_repo_gpgcheck: \"1\""
fi

# etherpad
ETHERPAD_LITE_VERSION=1.6.1
ETHERPAD_LITE_URL="https://codeload.github.com/ether/etherpad-lite/tar.gz/${ETHERPAD_LITE_VERSION}"

URL_LIST="$URL_LIST $ETHERPAD_LITE_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    ETHERPAD_EXTRA_VARS="etherpad_source_url: \"${SWIFT_CACHE}/etherpad/${ETHERPAD_LITE_VERSION}\""
    ETHERPAD_EXTRA_VARS+=", etherpad_version: \"${ETHERPAD_LITE_VERSION}\""
fi

# mirror2swift
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    MIRROR2SWIFT_EXTRA_VARS="mirror2swift_url: \"${SWIFT_CACHE}/mirror2swift.git\""
fi

# Influxdb
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    INFLUXDB_EXTRA_VARS="influxdb_repo_url: \"http://46.231.132.68:8080/v1/AUTH_b50e80d3969f441a8b7b1fe831003e0a/repomirror/influxdb/\""
    INFLUXDB_EXTRA_VARS+=", influxdb_repo_name: \"influxdb\""
    INFLUXDB_EXTRA_VARS+=", influxdb_repo_desc: \"InfluxDB Repository\""
    INFLUXDB_EXTRA_VARS+=", influxdb_repo_gpgcheck: \"1\""
    INFLUXDB_EXTRA_VARS+=", influxdb_repo_gpgkey: \"\""
fi

#---- URL health check -------
function test_url {
  local e=0
  for url in $URL_LIST; do
    HTTP_CODE=$(curl -o /dev/null --silent --head --write-out '%{http_code}' "$url")

    if [ $HTTP_CODE -gt 399 ]
    then
      e=1
      echo "$url - Error $HTTP_CODE"
    else
      echo "$url - $HTTP_CODE"
    fi
  done;
  for repo in $GIT_REPO_LIST; do
    git ls-remote --exit-code $repo > /dev/null 2>&1
    if [ $? -gt 0 ]
    then
      echo "No matching refs for $repo"
      e=1
    else
      echo "$repo - 200"
    fi
  done;
  exit $e
}

[ -z "$DEBUG" ] || set -x
