# -*- mode: ruby -*-
# vi: set ft=ruby :
# http://softwarefactory-project.io/docs/contribute.html#prepare-a-development-environment

Vagrant.configure(2) do |config|

  config.vm.network "public_network", bridge:
    ['wlp4s0', 'eth0']

  config.ssh.forward_agent = true

  config.vm.provider "libvirt" do |vb, override|
    override.vm.box = "http://cloud.centos.org/centos/7/vagrant/x86_64/images/CentOS-7.LibVirt.box"
    vb.memory = 3072
    vb.cpus = 2
    vb.video_type = "qxl"
    vb.storage :file, :size => "60G"
    end

  config.vm.provider "virtualbox" do |vb|
    vb.memory = "3072"
    vb.cpus = 2
    vb.video_type = "qxl"
    vb.storage :file, :size => "60G"
  end

  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    # Disable SELinux (for squid)
    sudo setenforce 0
    sudo sed -i --follow-symlinks 's/^SELINUX=.*/SELINUX=disabled/g' /etc/sysconfig/selinux

    # Set MTU to be cloud-proof
    sudo ip link set dev eth0 mtu 1400

    # Configure extra space
    sudo parted /dev/vdb --script -- mklabel msdos
    sudo parted /dev/vdb --script -- mkpart primary 0% 100%
    sudo pvcreate /dev/vdb1
    sudo vgextend VolGroup00 /dev/vdb1
    sudo lvextend -L +60G /dev/mapper/VolGroup00-LogVol00
    sudo resize2fs /dev/mapper/VolGroup00-LogVol00

    # Install prerequisites
    sudo yum install -y epel-release
    sudo yum install -y libvirt libvirt-daemon-lxc git git-review vim-enhanced tmux curl python-devel wget python-pip mariadb-devel python-virtualenv gcc libffi-devel openldap-devel openssl-devel python-sphinx python-tox python-flake8 ansible squid
    sudo systemctl enable libvirtd
    sudo systemctl start libvirtd
    sudo yum install -y rpmdevtools createrepo mock python-jinja2 mosquitto
    sudo /usr/sbin/usermod -a -G mock $USER

    # Add a local proxy
    sudo sed -ie 's/^http_port.*/http_port 127.0.0.1:3128/g' /etc/squid/squid.conf
    sudo sed -ie 's#.*cache_dir.*#cache_dir ufs /var/spool/squid 2000 16 256 max-size=100000000#g' /etc/squid/squid.conf
    sudo systemctl enable squid
    sudo systemctl start squid

    mkdir software-factory
    mkdir zuul-rpm-build
    sudo mkdir -p /var/lib/sf/
    sudo ln -s /home/$USER/zuul-rpm-build /var/lib/sf/zuul-rpm-build
    cd software-factory && git clone https://softwarefactory-project.io/r/software-factory/sfinfo
    git clone https://softwarefactory-project.io/r/software-factory/software-factory
    sudo cp -v sfinfo/rpm-gpg/* /etc/pki/rpm-gpg/
    # TODO make this independent from version
    sudo yum install -y https://softwarefactory-project.io/repos/sf-release-2.5.rpm
    sudo yum install -y zuul-cloner
    for repo in $(python << EOF
import yaml
repos = yaml.load(open('sfinfo/sf-master.yaml'))
for r in repos['packages']:
    suffix = r['name']
    if r['source'] == 'external':
        suffix += '-distgit'
    print suffix
    if 'distgit' in r:
        print r['distgit']
EOF); do
      git clone https://softwarefactory-project.io/r/$repo || (cd /home/vagrant/$repo && git fetch --all && cd -);
    done

    # install GUI testing tools
    sudo yum install -y firefox Xvfb libXfont Xorg jre
    sudo mkdir /usr/lib/selenium /var/log/selenium /var/log/Xvfb
    sudo wget -O /usr/lib/selenium/selenium-server.jar http://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.0.jar
    sudo pip install selenium pyvirtualdisplay

    # install ffmpeg
    sudo rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro
    sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm
    sudo yum update
    sudo yum install -y ffmpeg
    curl -sL https://asciinema.org/install | sh

    echo 38.145.34.53 koji.softwarefactory-project.io | sudo tee -a /etc/hosts

    # some useful tools
    sudo pip install virtualenvwrapper
  SHELL

  config.vm.provision "file", source: "~/.gitconfig", destination: "~/.gitconfig"
  config.vm.provision "file", source: "~/.vimrc", destination: "~/.vimrc"
  config.vm.provision "file", source: "vagrant_sf.bashrc", destination: "~/.bashrc"
end
